{
    "articles": [
        {
            "title": "C# 实用代码分享",
            "description": "基于.Net C#的句柄操作、内嵌资源、配置文件等实用开发技术",
            "time": "2020-10-04",
            "tags": [
                "C#",
                "开发工具",
                "早期文章"
            ],
            "type": "csharp-tutorial",
            "content": [
                "<h2>1.获取其他程序的句柄模拟键盘按键</h2>",
                "<div class=\"code-block\">",
                "<pre>",
                "using System;",
                "using System.Diagnostics;",
                "using System.Runtime.InteropServices;",
                "using System.Windows.Forms;",
                "namespace 命名空间",
                "{",
                "   internal class 项目",
                "   {",
                "       [DllImport(\"user32.dll\")]",
                "       internal static extern int SetForegroundWindow(IntPtr ip);//获取窗口句柄",
                "       internal static void Main()",
                "       {",
                "           Process process = Process.GetProcessById(PID);",
                "           SetForegroundWindow(process.MainWindowHandle);",
                "           SendKeys.SendWait(\"\");",
                "           // ^ = Ctrl",
                "           // % = Alt",
                "           // {按键 数字} = 按{按键}{数字}次",
                "       }",
                "   }",
                "}",
                "</pre>",
                "</div>",
                "<h2>2.内嵌类库加载（先将类库改为内嵌资源）</h2>",
                "<p style=\"color:#ff0000;\">⚠️ 注意：需在 AssemblyInfo.cs 中添加资源语言配置</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "AppDomain.CurrentDomain.AssemblyResolve += (sender, args) =&gt;",
                "{",
                "   string name = \"程序的命名空间.文件夹名.\" + new AssemblyName(args.Name).Name + \".dll\";",
                "   var stream = Assembly.GetExecutingAssembly().GetManifestResourceStream(name);                ",
                "   byte[] assData = new byte[stream.Length];",
                "   stream.Read(assData, 0, assData.Length);",
                "   return Assembly.Load(assData);",
                "}; ",
                "[assembly: NeutralResourcesLanguage(\"zh-CN\", UltimateResourceFallbackLocation.MainAssembly)]",
                "</pre>",
                "</div>",
                "<h2>3.提取内嵌文件</h2>",
                "<div class=\"code-block\">",
                "<pre>",
                "internal class Extract",
                "{",
                "   internal static void File(string fn, string of)",
                "   {",
                "       BufferedStream bs = null;",
                "       FileStream fs = null;",
                "       try",
                "       {",
                "         Assembly a = Assembly.GetExecutingAssembly();",
                "         bs = new BufferedStream(a.GetManifestResourceStream(fn));",
                "         fs = new FileStream(of, FileMode.Create, FileAccess.Write);",
                "         byte[] buffer = new byte[1024];",
                "         int length;",
                "         while ((length = bs.Read(buffer, 0, buffer.Length)) &gt; 0)",
                "         {",
                "           fs.Write(buffer, 0, length);",
                "         }",
                "         fs.Flush();",
                "       }",
                "       finally",
                "       {",
                "         if (fs != null) fs.Dispose();",
                "         if (bs != null) bs.Dispose();",
                "       }",
                "   }",
                "}",
                "</pre>",
                "</div>",
                "<h2>4. 配置文件写法</h2>",
                "<details>",
                "<summary>INI 配置文件（不推荐）</summary>",
                "<p style=\"color:#ff0000;\">⚠️ 需要调用 kernel32.dll，安全性较差</p>",
                "</details>",
                "<details>",
                "<summary>JSON 配置文件（推荐）</summary>",
                "<div class=\"code-block\">",
                "<pre>",
                "// 读取配置",
                "internal static dynamic Read(string keywords)",
                "{",
                "   StreamReader sr = File.OpenText(\"config.json\");",
                "   JsonTextReader jtr = new JsonTextReader(sr);",
                "   JObject jo = (JObject)JToken.ReadFrom(jtr);",
                "   dynamic value = (dynamic)jo[keywords];",
                "   sr.Dispose();",
                "   return value;",
                "}",
                "// 写入配置",
                "internal static void Write(string keywords, dynamic newVaelue)",
                "{",
                "   string str = File.ReadAllText(\"config.json\");",
                "   dynamic jo = JsonConvert.DeserializeObject(str);",
                "   jo[keywords] = newVaelue;",
                "   File.WriteAllText(\"config.json\", JsonConvert.SerializeObject(jo, Formatting.Indented));",
                "}",
                "</pre>",
                "</div>",
                "<p>示例 config.json：</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "{",
                "\"对象名一\": \"字符串\",",
                "\"对象名二\": 0,",
                "\"对象名三\": false",
                "}",
                "</pre>",
                "</div>",
                "</details>",
                "<h2>5. 收集目录内指定格式文件</h2>",
                "<div class=\"code-block\">",
                "<pre>",
                "using System;",
                "using System.IO;",
                "namespace MusicCollector",
                "{",
                "   public class MainClass",
                "   {",
                "       public static void Main()",
                "       {",
                "           Console.Write(\"请输入目录路径: \\n&gt\");",
                "           string inputPath = Console.ReadLine();",
                "           string outputPath = inputPath + \"\\\\Output\";",
                "           if (!Directory.Exists(outputPath)) Directory.CreateDirectory(outputPath);",
                "           ",
                "           DirectoryInfo di = new DirectoryInfo(inputPath);",
                "           CollectFiles(di, outputPath);",
                "           Console.WriteLine(\"完成！\");",
                "           Console.ReadKey();",
                "       }",
                "       private static void CollectFiles(DirectoryInfo dir, string output)",
                "       {",
                "           foreach (FileInfo file in dir.GetFiles())",
                "           {",
                "               if (file.Extension == \".ogg\")",
                "               {",
                "                   string destPath = Path.Combine(output, $\"{dir.Name}{file.Extension}\");",
                "                   if (File.Exists(destPath)) destPath = Path.Combine(output, $\"{dir.Name}_new{file.Extension}\");",
                "                   File.Copy(file.FullName, destPath);",
                "               }",
                "           }",
                "           foreach (DirectoryInfo subDir in dir.GetDirectories())",
                "           {",
                "               if (subDir.Name != \"Output\") CollectFiles(subDir, output);",
                "           }",
                "       }",
                "   }",
                "}",
                "</pre>",
                "</div>",
                "<h2>6. Hjson 配置文件</h2>",
                "<h3>1. 基本介绍</h3>",
                "<P style=\"color:red;\">说明：TML 1.4新版早已自动生成hjson文件，此教程Localizer.cs为早期教程的内容，现在无需编写，但不删除，仅供参考！</P>",
                "<p>众所周知：<br>&emsp;&emsp;语言是人类进行沟通交流的表达方式。它是人与人之间的一种交流方式，人们彼此的交往离不开语言。尽管通过图片、动作、表情等可以传递人们的思想，但是语言是其中最重要的，也是最方便的媒介。然而世界各地的人们所用的语言各不相同，彼此间直接交谈是困难的，甚至是不可能的。即使是同一种语言，还有不同的方言，其差别程度也不相同。有的方言可以基本上相互理解，有的差别极大。</p>",
                "<p>&emsp;&emsp;我们早期的模组开发者早已意识到多语言的重要性，@SweelLong为主要语言文件编写者，并且随着tModLoader的不断更迭,早期使用本地化模组，依靠代码实现自制语言格式的json文件读取……</p>",
                "<p>&emsp;&emsp;TML 1.4的发布，TML-Team加入了新的本地化方案{*.hjson}，并提供了一系列的工具支持，使得开发者可以轻松的实现多语言支持。本教程将介绍HJSON的语法和用法。</p>",
                "<h3>2. 文件类型</h2>",
                "<p>&emsp;&emsp;JSON 是我们平时使用非常频繁的数据格式，尤其在网络传输中非常受欢迎。大部分编程语言都支持这种格式。但是作为配置文件还是有些许不足，最主要的一点是缺乏注释（其他比如低信噪比其实还可以接受），所以在 JSON 的基础上衍生出了更方便的作为配置文件的格式 HJSON 。</p>",
                "<p>HJSON的写法毕竟还是多的，甚至可以直接模仿JSON的写法：</p>",
                "<div class=\"code-block\"><pre>Xxx:\n{\n   Xx: “x”\n   Xxx:{\n     ...\n   }\n}\n这里称：Xxx和xx为键名、x为键值。</pre></div>",
                "<p>调用HJSON值的方式类似调用命名空间：</p>",
                "<p>&emsp;&emsp;现在给定HJSON文件：</p>",
                "<div class=\"code-block\"><pre>",
                "Mods:\n{\n   Terraria:\n   {\n      Name: “Terraria”\n      Description: “一个生存类模组”\n   }\n   tModLoader:\n   {\n      Name: “tModLoader”\n      Description: “一个模组加载器”\n   }\n}\n</pre></div>",
                "</pre></div>",
                "<p>&emsp;&emsp;在C#中读取HJSON文件(键名的完全路径)：</p>",
                "<div class=\"code-block\">输出Terraria的描述：>>> Mods.Terraria.Description\n</div>",
                "<div class=\"code-block\">输出结果：\"一个生存类模组\"</div>",
                "<h3>3. TML本地化方案介绍</h3>",
                "<div class=\"code-block\"><pre>",
                "TML本地化方案：",
                "// You may find this .hjson file approach to translations easier for your mod.",
                "// 你会发现.hjson文件的方法让模组翻译更容易。",
                "// .hjson files contain translations for the language specified in the filename. (Make sure this file is UTF-8 encoded only.)",
                "// .hjson的文件夹名是指定的（确保文件编码只能为UTF-8）",
                "// The possible languages are: English (\"en-US\"), German (\"de-DE\"), Italian (\"it-IT\"), French (\"fr-FR\"), Spanish (\"es-ES\"), Russian (\"ru-RU\"), Chinese (\"zh-Hans\"), Portuguese (\"pt-BR\"), and Polish (\"pl-PL\")",
                "// 可能的语言是（引号内为指定的文件名）：英语(\"en-US\"), 德语(\"de-DE\"), 意大利语(\"it-IT\"), 法语(\"fr-FR\"), 西班牙语(\"es-ES\"), 俄语(\"ru-RU\"), 汉语(\"zh-Hans\"), 葡萄牙语(\"pt-BR\"), 波兰语(\"pl-PL\")",
                "// We have organized these files in a folder called Localization. A single file per language makes it extremely easy to to integrate and maintain translations.",
                "// 我们将这些文件组织在一个名为本地化的文件夹中。每种语言只有一个文件，因此非常容易整理和维护翻译。",
                "// Each translation entry in .hjson files contains a key and a value. The key is determined following the rules of JSON [https://www.w3schools.com/js/js_json_syntax.asp]",
                "// 每个翻译条目.hjson文件都包含一个键名和一个键值。键是根据JSON的规则确定的[https://www.w3schools.com/js/js_json_syntax.asp]",
                "// The Key automatically inherits \"Mods.ModNameHere.\", which is useful to know if you want to use substitutions (as seen in the Paper Airplane example) or use Language.GetTextValue or Network text.",
                "// 键自动继承“Mods.模组名”，如果您想使用代码设置语言或使用Language.GetTextValu或网络文本是非常有用的。",
                "// The following are the currently autogenerated keys: ItemName, ItemTooltip, BuffName, BuffDescription, ProjectileName, NPCName, MapObject, and Prefix",
                "// 这些键是自动继承的（开发组要求不使用自动键，可忽略）：ItemName, ItemTooltip, BuffName, BuffDescription, ProjectileName, NPCName, MapObject, and Prefix",
                "</pre></div>",
                "<h3>4. Localizer.cs</h3>",
                "<div class=\"code-block\"><pre>",
                "/// &lt;summary&gt;",
                "/// Items/Weapons文件夹专用键",
                "/// &lt;/summary&gt;",
                "/// &lt;param name=\"keyName\"&gt;&lt;/param&gt;",
                "/// &lt;returns&gt;&lt;/returns&gt;",
                "internal static string WeaponsText(string keyName) => Language.GetTextValue(\"Mods.InterspaceMod.Weapons.{0}\", keyName);",
                "根据第二行，我们发现这个方法允许Weapons文件夹下的类调用语言文本：",
                "查阅语言文件（如zh-Hans.hjson）：如果要调用",
                "Weapons:",
                "{",
                "    InterspaceSword: \"星际天河之刃\"",
                "}",
                "直接调用：Language.GetTextValue(\"Mods.InterspaceMod.Weapons.InterspaceSword\");",
                "方法调用：WeaponsText(\"InterspaceSword\");",
                "对于Armors键里有多层，则可以这样写：",
                "ArmorsText(\"InterspaceArmors.Head\");",
                "Language.GetTextValue(\"Mods.InterspaceMod.Armors.InterspaceArmors.Head\");",
                "</pre></div>"
            ]
        },
        {
            "title": "游戏联机全方案",
            "description": "端口映射、云服务器、内网穿透、异地组网等联机技术详解",
            "time": "2020-10-05",
            "tags": [
                "网络",
                "游戏开服",
                "早期文章"
            ],
            "type": "network-tutorial",
            "content": [
                "<h2>一、端口映射（IPv4 环境）</h2>",
                "<p>⚠️ 需先确认拥有公网IP，IPv6环境可能不适用</p>",
                "<h3>操作步骤</h3>",
                "<ol>",
                "<li>进入路由器管理页面（通常为 <code>http://192.168.0.1</code> 或 <code>http://192.168.1.1</code>）</li>",
                "<li>绑定本机局域网IP与MAC地址（可选，避免IP变动）</li>",
                "<li>设置虚拟服务器（端口转发）：</li>",
                "</ol>",
                "<img src=\"./assets/img/article/network-tutorial/01.png\" class=\"tutorial-image\">",
                "<div class=\"code-block\">",
                "<pre>",
                "   示例配置：(以游戏Terraria为例)",
                "   - 协议：TCP/UDP",
                "   - 外部端口：7777（游戏端口）",
                "   - 内部端口：7777（游戏端口）",
                "   - 内部IP：192.168.0.112（本机局域网IP）",
                "</pre>",
                "</div>",
                "<p>✅ 完成后可通过<a href=\"https://www.ipip.net\" target=\"_blank\">IP查询网站</a>获取公网IP进行连接</p>",
                "<h2>二、租用云服务器（以华为云为例）</h2>",
                "<h3>操作流程</h3>",
                "<ol>",
                "<li>购买Windows Server系统云服务器</li>",
                "<li>在控制台开放入站规则（如开放7777端口）</li>",
                "<img src=\"./assets/img/article/network-tutorial/02.png\" class=\"tutorial-image\">",
                "<img src=\"./assets/img/article/network-tutorial/03.png\" class=\"tutorial-image\">",
                "<li>通过远程桌面连接服务器</li>",
                "<img src=\"./assets/img/article/network-tutorial/04.png\" class=\"tutorial-image\">",
                "<img src=\"./assets/img/article/network-tutorial/05.png\" class=\"tutorial-image\">",
                "<li>创建游戏目录并放置服务端文件：</li>",
                "<img src=\"./assets/img/article/network-tutorial/06.png\" class=\"tutorial-image\">",
                "<img src=\"./assets/img/article/network-tutorial/07.png\" class=\"tutorial-image\">",
                "</ol>",
                "<div class=\"code-block\">",
                "<pre>",
                "   目录结构：",
                "   Server/",
                "   ├─ TerrariaServer.exe",
                "   ├─ tModLoaderServer.exe（如需模组）",
                "   └─ Worlds/（存放地图文件）",
                "</pre>",
                "</div>",
                "<p>✅ 连接方式：游戏内输入<code>公网IP:7777</code></p>",
                "<h2>三、内网穿透（推荐SakuraFrp）</h2>",
                "<ol>",
                "<li>下载并安装SakuraFrp客户端</li>",
                "<li>创建隧道：</li>",
                "<ul>",
                "<li>协议：TCP</li>",
                "<li>本地端口：7777</li>",
                "<li>远程端口：随机或自定义</li>",
                "</ul>",
                "<li>启动隧道后使用生成的域名/IP连接</li>",
                "</ol>",
                "<p>⚠️ 免费版可能有流量限制，适合临时联机</p>",
                "<h2>四、游侠对战平台（推荐游侠对战）【实质：异地组网】</h2>",
                "<ol>",
                "<li>安装游侠对战平台并绑定游戏路径</li>",
                "<li>启动平台内的游戏联机功能</li>",
                "<li>通过平台房间系统加入游戏</li>",
                "</ol>",
                "<p>✅ 优势：无需公网IP，适合新手快速联机</p>",
                "<h2>附：联机流程图</h2>",
                "<img src=\"./assets/img/article/network-tutorial/08.png\" class=\"tutorial-image\">"
            ]
        },
        {
            "title": "VS-Git 常见问题修复",
            "description": "拉取/推送失败、版本控制冲突等问题的图文解决方案",
            "time": "2021-07-29",
            "tags": [
                "VS",
                "Git",
                "早期文章"
            ],
            "type": "vs-git-solution",
            "content": [
                "<h2>1. 拉取/提取失败：冲突解决</h2>",
                "<p>当拉取代码出现冲突时，VS 会提示合并冲突：</p>",
                "<img src=\"./assets/img/article/vs-git-solution/01.png\" class=\"tutorial-image\">",
                "<h3>操作步骤</h3>",
                "<ol>",
                "<li>在“团队资源管理器”中点击“解决冲突”</li>",
                "<li>对比本地版本与远程版本，手动选择保留代码</li>",
                "<li>保存文件后标记为“已解决”</li>",
                "<li>提交并推送合并后的代码</li>",
                "</ol>",
                "<h2>2. 推送失败：认证问题</h2>",
                "<p>常见原因：未配置SSH密钥或密码错误</p>",
                "<img src=\"./assets/img/article/vs-git-solution/02.png\" class=\"tutorial-image\">",
                "<h3>解决方案</h3>",
                "<ul>",
                "<li>检查是否已在GitHub/GitLab配置SSH公钥：</li>",
                "<div class=\"code-block\">",
                "<pre>",
                "   // 生成新密钥（如有需要）",
                "   ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"",
                "   // 查看公钥",
                "   cat ~/.ssh/id_rsa.pub",
                "</pre>",
                "</div>",
                "<li>在VS中确认登录账号与代码仓库权限一致</li>",
                "<li>尝试使用HTTPS链接替代SSH链接（在仓库设置中获取）</li>",
                "</ul>",
                "<h2>3. 其他常见问题</h2>",
                "<details>",
                "<summary>文件未跟踪（Untracked Files）</summary>",
                "<p>在“更改”选项卡中勾选文件，点击“提交”即可添加到版本控制</p>",
                "</details>",
                "<details>",
                "<summary>分支丢失</summary>",
                "<p>通过“查看所有分支”功能恢复，或使用命令行 <code>git reflog</code> 找回提交记录</p>",
                "</details>"
            ]
        },
        {
            "title": "Win11 安卓子系统离线安装",
            "description": "离线包下载地址与安装步骤图文指南，过时的教程内容，现在可能并不适用",
            "time": "2021-07-29",
            "tags": [
                "Win11",
                "安卓子系统",
                "早期文章"
            ],
            "type": "win11-android",
            "content": [
                "<h2>一、下载离线安装包</h2>",
                "<ol>",
                "<li>打开 <a href=\"https://www.microsoft.com/store/productId/9P3395VX91NR\" target=\"_blank\">Microsoft Store 离线包获取工具</a></li>",
                "<li>输入应用商店链接：<code>https://www.microsoft.com/store/productId/9P3395VX91NR</code></li>",
                "<li>选择 <strong>Slow</strong> 通道，找到以下文件：</li>",
                "</ol>",
                "<div class=\"code-block\">",
                "MicrosoftCorporationII.WindowsSubsystemForAndroid_xxx_neutral~xxx.msixbundle",
                "</div>",
                "<p>✅ 提示：文件大小约 1.5GB，下载可能需要较长时间</p>",
                "<h2>二、安装步骤</h2>",
                "<ol>",
                "<li>启用Windows功能“虚拟机平台”和“适用于Linux的Windows子系统”：</li>",
                "<div class=\"code-block\">",
                "<pre>",
                "// 以管理员身份打开PowerShell",
                "dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart",
                "dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart",
                "</pre>",
                "</div>",
                "<li>安装下载的 <code>.msixbundle</code> 文件（双击即可，需允许来自未知来源的应用）</li>",
                "<li>安装完成后在开始菜单找到“Windows 安卓子系统”并启动</li>",
                "</ol>",
                "<h2>三、常见问题</h2>",
                "<details>",
                "<summary>Q：安装时提示“此应用无法在你的设备上运行”</summary>",
                "<p>A：确保电脑支持虚拟化技术（VT-x/AMD-V）并在BIOS中启用</p>",
                "</details>",
                "<details>",
                "<summary>Q：无法联网</summary>",
                "<p>A：在子系统设置中启用“共享主机网络”，或重启电脑后尝试</p>",
                "</details>",
                "<h2>附：官方文档链接</h2>",
                "<p><a href=\"https://docs.microsoft.com/zh-cn/windows/android/android-subsystem-for-windows\" target=\"_blank\">Windows 安卓子系统官方文档</a></p><br><br><br>"
            ]
        },
        {
            "title": "前端学习笔记",
            "description": "HTML + CSS + JavaScript 的基础学习笔记，轻松上手前端开发",
            "time": "2025-04-25",
            "tags": [
                "前端",
                "笔记",
                "有感记录"
            ],
            "type": "html-css-js-note",
            "content": [
                "<h2>HTML基础教程</h2>",
                "<h3>HTML文档结构</h3>",
                "<p>HTML文档由多个部分组成，包括文档类型声明、HTML标签、头部信息和主体内容等。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "&lt;!DOCTYPE html&gt;",
                "&lt;html&gt;",
                "&lt;head&gt;",
                "&emsp;&emsp;&lt;meta charset=\"utf-8\"&gt;",
                "&emsp;&emsp;&lt;title&gt;页面标题&lt;/title&gt;",
                "&emsp;&emsp;&lt;link rel=\"icon\" href=\"图标路径 - 网站图标\"&gt;",
                "&emsp;&emsp;&lt;link rel=\"shortcut\" href=\"图标路径 - 地址栏显示图标\"&gt;",
                "&emsp;&emsp;&lt;!-- 其他元数据和资源引用 --&gt;",
                "&lt;/head&gt;",
                "&lt;body&gt;",
                "&emsp;&emsp;&lt;!-- 页面内容 --&gt;",
                "&lt;/body&gt;",
                "&lt;/html&gt;",
                "</pre>",
                "</div>",
                "<h3>HTML标签</h3>",
                "<h4>标题标签</h4>",
                "<p>HTML提供了6级标题标签，从H1到H6，用于表示不同级别的标题。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "&lt;h1&gt;一级标题，一个网页尽量出现一次H1&lt;/h1&gt;",
                "&lt;h2&gt;二级标题&lt;/h2&gt;",
                "&lt;h3&gt;三级标题&lt;/h3&gt;",
                "&lt;h4&gt;四级标题&lt;/h4&gt;",
                "&lt;h5&gt;五级标题&lt;/h5&gt;",
                "&lt;h6&gt;六级标题&lt;/h6&gt;",
                "</pre>",
                "</div>",
                "<h4>文本标签</h4>",
                "<p>文本标签用于格式化文本内容，如粗体、斜体、上标等。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "&lt;strong&gt;文本标签：粗体&lt;/strong&gt;",
                "&lt;em&gt;文本标签：斜体&lt;/em&gt;",
                "&lt;sup&gt;文本标签：上标&lt;/sup&gt;",
                "&lt;sub&gt;文本标签：下标&lt;/sub&gt;",
                "&lt;s&gt;文本标签：中划线&lt;/s&gt;",
                "&lt;u&gt;文本标签：下划线&lt;/u&gt;",
                "&lt;big&gt;大号文本&lt;/big&gt;",
                "&lt;small&gt;小号文本&lt;/small&gt;",
                "&lt;code&gt;代码文本&lt;/code&gt;",
                "</pre>",
                "</div>",
                "<h4>特殊字符</h4>",
                "<p>HTML中使用特殊字符实体来表示一些特殊符号。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "空格&nbsp; ：&amp;nbsp;(三个空格等价于一个汉字)",
                "分节&sect; ：&amp;sect;",
                "版权&copy; ：&amp;copy;",
                "注册&reg;  ：&amp;reg;",
                "商标&trade;：&amp;trade;",
                "欧元&euro; ：&amp;euro;",
                "日元&yen;  ：&amp;yen;",
                "摄氏&deg;  ：&amp;deg;",
                "大于&gt;   ：&amp;gt;",
                "</pre>",
                "</div>",
                "<h4>列表标签</h4>",
                "<p>HTML提供了三种列表标签：有序列表、无序列表和定义列表。</p>",
                "<h5>有序列表</h5>",
                "<div class=\"code-block\">",
                "<pre>",
                "&lt;div id=\"有序列表\"&gt;",
                "&emsp;&emsp;&lt;ol type=\"i\"&gt;",
                "&emsp;&emsp;&emsp;&emsp;&lt;!--只能包含li元素--&gt;",
                "&emsp;&emsp;&emsp;&emsp;&lt;li&gt;列表项&lt;/li&gt;",
                "&emsp;&emsp;&emsp;&emsp;&lt;li&gt;列表项&lt;/li&gt;",
                "&emsp;&emsp;&lt;li&gt;列表项&lt;/li&gt;",
                "&emsp;&emsp;&lt;/ol&gt;",
                "&lt;/div&gt;",
                "</pre>",
                "</div>",
                "<h5>无序列表</h5>",
                "<div class=\"code-block\">",
                "<pre>",
                "&lt;div id=\"无序列表\"&gt;",
                "&emsp;&emsp;&lt;ul type=\"disc\"&gt;&lt;!--disc/circle/square--&gt;",
                "&emsp;&emsp;&emsp;&emsp;&lt;!--只能包含li元素--&gt;",
                "&emsp;&emsp;&lt;li&gt;列表项&lt;/li&gt;",
                "&emsp;&emsp;&lt;li&gt;列表项&lt;/li&gt;",
                "&emsp;&emsp;&lt;li&gt;列表项&lt;/li&gt;",
                "&emsp;&emsp;&lt;/ul&gt;",
                "&lt;/div&gt;",
                "</pre>",
                "</div>",
                "<h5>定义列表</h5>",
                "<div class=\"code-block\">",
                "<pre>",
                "&lt;div id=\"定义列表\"&gt;",
                "&emsp;&emsp;&lt;dt&gt;名词1&lt;/dt&gt;",
                "&emsp;&emsp;&lt;dd&gt;描述1&lt;/dd&gt;",
                "&emsp;&emsp;&lt;dt&gt;名词2&lt;/dt&gt;",
                "&emsp;&emsp;&lt;dd&gt;描述2&lt;/dd&gt;",
                "&emsp;&emsp;&lt;dt&gt;名词3&lt;/dt&gt;",
                "&emsp;&emsp;&lt;dd&gt;描述3&lt;/dd&gt;",
                "&lt;/div&gt;",
                "</pre>",
                "</div>",
                "<h4>表格标签</h4>",
                "<p>表格用于展示结构化数据，由表头、表体和表脚组成。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "&lt;div id=\"表格\"&gt;",
                "&emsp;&emsp;&lt;table&gt;",
                "&emsp;&emsp;&emsp;&emsp;&lt;caption&gt;表格标题&lt;/caption&gt;",
                "&emsp;&emsp;&emsp;&emsp;&lt;thead&gt;",
                "&emsp;&emsp;&lt;tr&gt;",
                "&emsp;&emsp;&lt;th&gt;班级&lt;/th&gt;",
                "&emsp;&emsp;&lt;th&gt;姓名&lt;/th&gt;",
                "&emsp;&emsp;&lt;th&gt;总分&lt;/th&gt;",
                "&emsp;&emsp;&lt;/tr&gt;",
                "&emsp;&emsp;&lt;/thead&gt;",
                "&emsp;&emsp;&lt;tbody&gt;",
                "&emsp;&emsp;&lt;tr&gt;",
                "&emsp;&emsp;&lt;td&gt;一班&lt;/td&gt;",
                "&emsp;&emsp;&lt;td&gt;张三&lt;/td&gt;",
                "&emsp;&emsp;&lt;td&gt;100&lt;/td&gt;",
                "&emsp;&emsp;&lt;/tr&gt;",
                "&emsp;&emsp;&lt;tr&gt;",
                "&emsp;&emsp;&lt;td&gt;二班&lt;/td&gt;",
                "&emsp;&emsp;&lt;td&gt;90&lt;/td&gt;",
                "&emsp;&emsp;&lt;/tr&gt;",
                "&emsp;&emsp;&lt;tr&gt;",
                "&emsp;&emsp;&lt;td&gt;三班&lt;/td&gt;",
                "&emsp;&emsp;&lt;/tr&gt;",
                "&emsp;&emsp;&lt;/tbody&gt;",
                "&emsp;&emsp;&lt;tfoot&gt;",
                "&emsp;&emsp;&lt;tr&gt;",
                "&emsp;&emsp;&lt;td&gt;总分&lt;/td&gt;",
                "&emsp;&emsp;&lt;td&gt;&lt;/td&gt;",
                "&emsp;&emsp;&lt;td&gt;300&lt;/td&gt;",
                "&emsp;&emsp;&lt;/tr&gt;",
                "&emsp;&emsp;&lt;/tfoot&gt;",
                "&lt;/table&gt;",
                "&lt;/div&gt;",
                "</pre>",
                "</div>",
                "<h4>图片标签</h4>",
                "<p>图片标签用于在网页中插入图片，并提供图片的相关属性。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "&lt;img src=\"图片路径\" alt=\"图片描述\" width=\"图片宽度\" height=\"图片高度\" /&gt;",
                "</pre>",
                "</div>",
                "<h4>链接标签</h4>",
                "<p>链接标签用于在网页中插入超链接，并提供链接的相关属性。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "&lt;a href=\"链接地址\" target=\"_blank\"&gt;链接文本&lt;/a&gt;",
                "</pre>",
                "</div>",
                "<h4>表单标签</h4>",
                "<p>表单标签用于创建网页表单，并提供表单的相关属性。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "&lt;form action=\"提交地址\" method=\"post\"&gt;",
                "&emsp;&emsp;&lt;label for=\"name\"&gt;姓名&lt;/label&gt;",
                "&emsp;&emsp;&lt;input type=\"text\" id=\"name\" name=\"name\" /&gt;",
                "&emsp;&emsp;&lt;br /&gt;",
                "&emsp;&emsp;&lt;label for=\"email\"&gt;邮箱&lt;/label&gt;",
                "&emsp;&emsp;&lt;input type=\"email\" id=\"email\" name=\"email\" /&gt;",
                "&emsp;&emsp;&lt;br /&gt;",
                "&emsp;&emsp;&lt;label for=\"message\"&gt;留言&lt;/label&gt;",
                "&emsp;&emsp;&lt;textarea id=\"message\" name=\"message\"&gt;&lt;/textarea&gt;",
                "&emsp;&emsp;&lt;br /&gt;",
                "&emsp;&emsp;&lt;input type=\"submit\" value=\"提交\" /&gt;",
                "&lt;/form&gt;",
                "</pre>",
                "</div>",
                "<h4>框架标签</h4>",
                "<p>框架标签用于创建网页内嵌框架，并提供框架的相关属性。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "&lt;iframe src=\"框架地址\" frameborder=\"0\"&gt;&lt;/iframe&gt;",
                "</pre>",
                "</div>",
                "<h2>CSS基础教程</h2>",
                "<h3>CSS选择器</h3>",
                "<p>CSS选择器用于选择网页元素，并应用相应的样式。</p>",
                "<h4>标签选择器</h4>",
                "<p>标签选择器用于选择特定标签。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "标签名 {",
                "    /* 样式 */",
                "}",
                "</pre>",
                "</div>",
                "<h4>类选择器</h4>",
                "<p>类选择器用于选择具有相同类属性的元素。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                ".类名 {",
                "    /* 样式 */",
                "}",
                "</pre>",
                "</div>",
                "<h4>ID选择器</h4>",
                "<p>ID选择器用于选择具有相同ID属性的元素。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "#ID名 {",
                "    /* 样式 */",
                "}",
                "</pre>",
                "</div>",
                "<h4>通配选择器</h4>",
                "<p>通配选择器用于选择所有元素。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "* {",
                "    /* 样式 */",
                "}",
                "</pre>",
                "</div>",
                "<h4>后代选择器</h4>",
                "<p>后代选择器用于选择特定元素的后代元素。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "父元素 &gt; 子元素 {",
                "    /* 样式 */",
                "}",
                "</pre>",
                "</div>",
                "<h4>子元素选择器</h4>",
                "<p>子元素选择器用于选择特定元素的直接子元素。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "父元素 &lt; 子元素 {",
                "    /* 样式 */",
                "}",
                "</pre>",
                "</div>",
                "<h4>相邻兄弟选择器</h4>",
                "<p>相邻兄弟选择器用于选择特定元素的相邻兄弟元素。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "元素A + 元素B {",
                "    /* 样式 */",
                "}",
                "</pre>",
                "</div>",
                "<h4>属性选择器</h4>",
                "<p>属性选择器用于选择具有特定属性的元素。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "元素[属性名=属性值] {",
                "    /* 样式 */",
                "}",
                "</pre>",
                "</div>",
                "<h3>CSS样式</h3>",
                "<p>CSS样式用于设置网页元素的样式。</p>",
                "<h4>字体样式</h4>",
                "<p>字体样式用于设置字体。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "font-family: 字体名称, 字体名称, ...;",
                "font-size: 字体大小;",
                "font-style: normal/italic/oblique;",
                "font-weight: normal/bold/bolder/lighter;",
                "font-variant: normal/small-caps;",
                "line-height: 行高;",
                "text-align: left/right/center/justify;",
                "text-decoration: none/underline/overline/line-through/blink;",
                "text-transform: none/capitalize/uppercase/lowercase;",
                "text-indent: 缩进距离;",
                "letter-spacing: 字符间距;",
                "word-spacing: 单词间距;",
                "color: 颜色;",
                "</pre>",
                "</div>",
                "<h4>背景样式</h4>",
                "<p>背景样式用于设置背景。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "background-color: 背景颜色;",
                "background-image: 背景图片路径;",
                "background-repeat: no-repeat/repeat/repeat-x/repeat-y;",
                "background-position: 背景位置;",
                "background-attachment: scroll/fixed/local;",
                "background-size: 背景大小;",
                "</pre>",
                "</div>",
                "<h4>边框样式</h4>",
                "<p>边框样式用于设置边框。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "border: 边框宽度 边框样式 边框颜色;",
                "border-width: 边框宽度;",
                "border-style: none/solid/dashed/dotted/double/groove/ridge/inset/outset;",
                "border-color: 边框颜色;",
                "border-top: 边框宽度 边框样式 边框颜色;",
                "border-right: 边框宽度 边框样式 边框颜色;",
                "border-bottom: 边框宽度 边框样式 边框颜色;",
                "border-left: 边框宽度 边框样式 边框颜色;",
                "border-top-width: 边框宽度;",
                "border-right-width: 边框宽度;",
                "border-bottom-width: 边框宽度;",
                "border-left-width: 边框宽度;",
                "border-top-style: none/solid/dashed/dotted/double/groove/ridge/inset/outset;",
                "border-right-style: none/solid/dashed/dotted/double/groove/ridge/inset/outset;",
                "border-bottom-style: none/solid/dashed/dotted/double/groove/ridge/inset/outset;",
                "border-left-style: none/solid/dashed/dotted/double/groove/ridge/inset/outset;",
                "border-top-color: 边框颜色;",
                "border-right-color: 边框颜色;",
                "border-bottom-color: 边框颜色;",
                "border-left-color: 边框颜色;",
                "border-collapse: collapse/separate;",
                "border-spacing: 边框间距;",
                "outline: 轮廓宽度 轮廓样式 轮廓颜色;",
                "outline-width: 轮廓宽度;",
                "outline-style: none/solid/dashed/dotted/double/groove/ridge/inset/outset;",
                "outline-color: 轮廓颜色;",
                "</pre>",
                "</div>",
                "<h4>盒子模型样式</h4>",
                "<p>盒子模型样式用于设置盒子模型。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "width: 宽度;",
                "height: 高度;",
                "margin: 外边距;",
                "margin-top: 上外边距;",
                "margin-right: 右外边距;",
                "margin-bottom: 下外边距;",
                "margin-left: 左外边距;",
                "padding: 内边距;",
                "padding-top: 上内边距;",
                "padding-right: 右内边距;",
                "padding-bottom: 下内边距;",
                "padding-left: 左内边距;",
                "border-radius: 圆角半径;",
                "box-shadow: 阴影水平偏移量 阴影垂直偏移量 阴影模糊半径 阴影扩展半径 阴影颜色;",
                "overflow: visible/hidden/scroll/auto;",
                "display: inline/block/inline-block/list-item/table/table-cell/table-row/none;",
                "position: static/relative/absolute/fixed;",
                "top: 上边距;",
                "right: 右边距;",
                "bottom: 下边距;",
                "left: 左边距;",
                "z-index: 层级;",
                "</pre>",
                "</div>",
                "<h4>其他样式</h4>",
                "<p>其他样式用于设置其他样式。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "cursor: pointer/auto/crosshair/default/pointer/move/e-resize/nw-resize/n-resize/se-resize/sw-resize/s-resize/w-resize/text/wait/help/progress;",
                "opacity: 透明度;",
                "visibility: visible/hidden/collapse;",
                "clear: none/left/right/both;",
                "content: 内容;",
                "quotes: 引号;",
                "counter-reset: 计数器名称;",
                "counter-increment: 计数器名称;",
                "nav-index: 导航序号;",
                "nav-up: 上一导航链接;",
                "nav-right: 下一导航链接;",
                "nav-down: 下一导航链接;",
                "nav-left: 上一导航链接;",
                "text-shadow: 水平偏移量 垂直偏移量 模糊半径 颜色;",
                "text-emphasis-color: 颜色;",
                "text-indent: 缩进距离;",
                "text-decoration-color: 颜色;",
                "</pre>",
                "</div>",
                "<h2>JavaScript核心知识点</h2>",
                "<h3>JavaScript基础</h3>",
                "<h4>变量</h4>",
                "<p>变量用于存储数据，可以是任意类型。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "var 变量名 = 值;",
                "let 变量名 = 值;",
                "const 变量名 = 值;",
                "</pre>",
                "</div>",
                "<h4>条件语句</h4>",
                "<p>条件语句用于执行不同的代码块。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "if (条件) {",
                "    // 代码块",
                "} else if (条件) {",
                "    // 代码块",
                "} else {",
                "    // 代码块",
                "}",
                "</pre>",
                "</div>",
                "<h4>循环语句</h4>",
                "<p>循环语句用于重复执行代码块。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "for (初始化; 条件; 迭代) {",
                "    // 代码块",
                "}",
                "for (var i = 0; i &lt; 10; i++) {",
                "    // 代码块",
                "}",
                "while (条件) {",
                "    // 代码块",
                "}",
                "do {",
                "    // 代码块",
                "} while (条件);",
                "</pre>",
                "</div>",
                "<h4>函数</h4>",
                "<p>函数用于封装代码，可以重复使用。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "function 函数名() {",
                "    // 代码块",
                "}",
                "函数名();",
                "</pre>",
                "</div>",
                "<h4>事件处理</h4>",
                "<p>事件处理用于响应用户操作。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "元素.addEventListener('事件类型', 函数);",
                "元素.removeEventListener('事件类型', 函数);",
                "</pre>",
                "</div>",
                "<h4>JSON</h4>",
                "<p>JSON (JavaScript Object Notation) 是一种轻量级的数据交换格式。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "var obj = {",
                "    '属性名': '值',",
                "    '属性名': '值',",
                "    '属性名': '值',",
                "};",
                "var json = JSON.stringify(obj);",
                "var obj = JSON.parse(json);",
                "</pre>",
                "</div>",
                "<h3>JavaScript对象</h3>",
                "<p>JavaScript对象用于存储数据。</p>",
                "<h4>对象字面量</h4>",
                "<p>对象字面量用于创建对象。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "var obj = {",
                "    '属性名': '值',",
                "    '属性名': '值',",
                "    '属性名': '值',",
                "};",
                "</pre>",
                "</div>",
                "<h4>属性</h4>",
                "<p>属性用于获取或设置对象的值。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "obj.属性名 = 值;",
                "var 值 = obj.属性名;",
                "</pre>",
                "</div>",
                "<h4>方法</h4>",
                "<p>方法用于操作对象。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "obj.方法名();",
                "</pre>",
                "</div>",
                "<h4>原型</h4>",
                "<p>原型用于创建对象。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "function 构造函数() {",
                "    this.属性名 = '值';",
                "}",
                "构造函数.prototype.方法名 = function() {",
                "    // 代码块",
                "};",
                "var obj = new 构造函数();",
                "</pre>",
                "</div>",
                "<h3>JavaScript数组</h3>",
                "<p>JavaScript数组用于存储一组数据。</p>",
                "<h4>创建数组</h4>",
                "<p>创建数组有两种方式。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "var arr = new Array();",
                "var arr = [元素1, 元素2, 元素3];",
                "</pre>",
                "</div>",
                "<h4>数组方法</h4>",
                "<p>数组方法用于操作数组。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "arr.push(元素); // 尾部添加元素",
                "arr.unshift(元素); // 头部添加元素",
                "arr.pop(); // 尾部删除元素",
                "arr.shift(); // 头部删除元素",
                "arr.splice(起始索引, 删除个数, 新元素1, 新元素2, ...); // 插入/删除元素",
                "arr.indexOf(元素); // 返回元素的索引",
                "arr.lastIndexOf(元素); // 返回元素的最后一次出现的索引",
                "arr.sort(); // 排序",
                "arr.reverse(); // 反转",
                "arr.join('' / ''); // 转换为字符串",
                "arr.slice(起始索引, 结束索引); // 切片",
                "</pre>",
                "</div>",
                "<h3>JavaScript正则表达式</h3>",
                "<p>JavaScript正则表达式用于匹配文本。</p>",
                "<h4>创建正则表达式</h4>",
                "<p>创建正则表达式有两种方式。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "var regex = /正则表达式/gi;",
                "var regex = new RegExp('正则表达式', 'gi');",
                "</pre>",
                "</div>",
                "<h4>正则表达式方法</h4>",
                "<p>正则表达式方法用于匹配文本。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "regex.test(文本); // 返回布尔值",
                "regex.exec(文本); // 返回匹配结果数组",
                "regex.match(文本); // 返回匹配结果数组",
                "regex.replace(文本, 新文本); // 替换文本",
                "regex.search(文本); // 返回匹配到的第一个位置",
                "</pre>",
                "</div>",
                "<h4>函数定义</h4>",
                "<p>JavaScript中函数是一等公民，可以通过多种方式定义。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "   function 函数名() {",
                "       // alert(\"Hello\");",
                "   }",
                "   函数名();",
                "</pre>",
                "</div>",
                "<h4>函数参数</h4>",
                "<p>JavaScript函数可以有多个参数。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "// 显式类型转换：Number() parseInt() parseFloat() toString()",
                "// 前面一种是只能全为数字，后面两种是将开头为数字的部分转换（正负号除外）",
                "// document.write中的换行用&lt;br&gt; alert用\\n",
                "// isFinite() 某数是否有限数值",
                "// isNaN()",
                "// escape() unescape()",
                "// eval()",
                "</pre>",
                "</div>",
                "<h3>字符串操作</h3>",
                "<p>JavaScript提供了丰富的字符串操作方法。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "var str = 'Hello World!';",
                "str.length;",
                "str.toLowerCase();",
                "str.toUpperCase();",
                "str.charAt(n);",
                "str.substring(左闭, 右开);",
                "str.replace(原字符, 新字符);",
                "str.replace(正则表达式, 新字符);",
                "str.split('分隔符')[n];",
                "str.indexOf('首次出现的下标位置');",
                "str.lastIndexOf('首次出现的下标位置');",
                "</pre>",
                "</div>",
                "<h3>数组操作</h3>",
                "<p>JavaScript数组是动态的，可以包含不同类型的元素。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "var array = new Array(); / [];",
                "array.slice(左开, 右闭);",
                "array.unshift();",
                "array.push();",
                "array.shift();",
                "array.pop();",
                "array.sort(up/down);",
                "array.reverse();",
                "array.join();",
                "str.split();",
                "</pre>",
                "</div>",
                "<h3>日期和数学对象</h3>",
                "<p>JavaScript提供了日期和数学对象来处理时间和数值计算。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "var oDate = new Date();",
                "getFullYear();",
                "getMonth();",
                "getDate();",
                "getHours();",
                "getMinutes();",
                "getSeconds();",
                "getDay();",
                "Math.floor(Math.random() * (m - n + 1)) + n;",
                "</pre>",
                "</div>",
                "<h3>DOM操作</h3>",
                "<p>DOM (Document Object Model) 操作允许JavaScript动态修改网页内容。</p>",
                "<h4>DOM对象获取</h4>",
                "<div class=\"code-block\">",
                "<pre>",
                "// DOM对象的获取：getElementById、getElementsByTagName、getElementsByClassName、getElementsByName、document.title、document.body",
                "// document.querySelector、document.querySelectorAll写法和CSS选择器一样",
                "</pre>",
                "</div>",
                "<h4>DOM元素操作</h4>",
                "<div class=\"code-block\">",
                "<pre>",
                "// 创建元素：document.createElement、document.createTextNode =&gt; appendChild、insertBefore、removeChild",
                "// 复制元素：obj.cloneNode(1/true: 复制子元素、0/false: 不复制子元素)",
                "// 替换元素：document.body.replaceChild",
                "// 删除元素：removeAttribute",
                "</pre>",
                "</div>",
                "<h4>样式操作</h4>",
                "<div class=\"code-block\">",
                "<pre>",
                "// 获取CS属性值：getComputedStyle + '.attr' / [\"attr\"] 可直接赋值修改属性值",
                "// getComputedSytle是计算后的样式，只有这个属性获得的对象才可以修改行内样式，上面的直接调用属性的方法属性只能修改标签中的内部样式",
                "// cssText属性 = CSS代码",
                "// 切换CSS样式一般是用JS直接修改标签的className",
                "</pre>",
                "</div>",
                "<h4>节点关系</h4>",
                "<div class=\"code-block\">",
                "<pre>",
                "// 查找父元素：.parentNode",
                "// 查找子元素：.childNodes、firstChild、lastChild 包含所有元素节点、文本节点等",
                "// 查找子元素：.children、firstElementChild、lastElementChild 只包含所有元素节点",
                "// .length 可返回类数组的长度",
                "// nodeType：1元素、2属性、3文本、8注释、9文档",
                "// 查找兄弟元素：previousSibling、nextSibling、previousElementSibling、nextElementSibling",
                "// 内部元素：innerHTML、内部文本：innerText",
                "</pre>",
                "</div>",
                "<h3>事件处理</h3>",
                "<p>JavaScript通过事件处理机制响应用户交互。</p>",
                "<h4>事件类型</h4>",
                "<div class=\"code-block\">",
                "<pre>",
                "// 鼠标事件：onclick、onmouseover、onmouseout、onmousedown、onmouseup、onmousemove",
                "// 键盘事件：onkeydown、onkeyup",
                "// 表单事件：onfocus、onblur、onselect选中文本框内容、onchange选择某一项 -&gt; 方法：focus()、select()",
                "// HTML5中的表单新增元素：placeholder，聚焦前空内容显示特定文本",
                "// 编辑事件：oncopy、onselectstart、oncontextmenu =&gt; 返回布尔值即可",
                "// 页面事件：onload、onbeforeunload",
                "</pre>",
                "</div>",
                "<h4>事件绑定</h4>",
                "<div class=\"code-block\">",
                "<pre>",
                "// 事件处理器：obj.onclick = function(){};",
                "// 绑定事件：addEventListener(type\"不带on的事件类型名\", fn函数名, false事件冒泡); // 可为同一个元素添加多个相同的事件",
                "// 解除事件：removeEventListener",
                "// event对象（function(e)、e.）：type、keyCode、shiftKey、ctrlKey、altKey",
                "// this：调用this所在的函数的DOM对象",
                "</pre>",
                "</div>",
                "<h3>window对象</h3>",
                "<p>window对象是浏览器的全局对象，提供了许多有用的方法和属性。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "// window对象 下一级 document文档对象、location地址对象、navigator浏览器对象、history历史对象、screen屏幕对象",
                "// winddow对象的方法：alert、confirm、prompt、open、close、setTimeout、clearTimeout、setInterval、clearInterval",
                "</pre>",
                "</div>",
                "</div>"
            ]
        },
        {
            "title": "简易爬虫教程",
            "description": "Python 爬虫基础入门教程，不考虑异常情况，适合初学者",
            "time": "2025-05-27",
            "tags": [
                "Python",
                "爬虫",
                "有感记录"
            ],
            "type": "spider-tutorial-simple",
            "content": [
                "<h2>目标</h2>",
                "<p>✅ 爬取中国工程院官网的院士简介</p>",
                "<p>✅ 爬取院士肖像</p>",
                "<p>✅ 爬取院士简介</p>",
                "<p>✅ 下载所有院士的肖像和简介</p>",
                "<h2>背景</h2>",
                "<p>在学习爬虫的过程中，我们需要一个简单的爬虫教程来帮助我们快速入门。本文将以中国工程院官网为例，介绍如何使用Python编写一个简单的爬虫程序，爬取院士的肖像和简介。</p>",
                "<p>中国工程院官网是一个提供院士信息和科研成果的网站，包含了大量的院士肖像和简介。我们可以通过爬虫技术，自动化地获取这些信息，并保存到本地。</p>",
                "<h2>准备工作</h2>",
                "<p>1. 安装python库os、requests、beautifulsoup4</p>",
                "<div class=\"code-block\"><code>pip install os requests beautifulsoup4</code></div>",
                "<p>2.掌握基本的python的语法和HTML标签的结构。</p>",
                "<h2>步骤</h2>",
                "<p>1. 打开浏览器，输入目标网站的<a href=\"https://www.cae.cn/cae/html/main/col48/column_48_1.html\" target=\"_blank\">地址</a>，按F12打开开发者工具，分析页面元素。</p>",
                "<img src=\"./assets/img/article/spider-tutorial-simple/03.png\" class=\"tutorial-image\" style=\"width: 100%;\">",
                "<p>2. 通过开发者工具定位元素可发现，在全体院士名单这里有多个超链接，均位于无序列表标签下的属于name_list类的列表项下的超链接标签，该标签居于href属性，储存对应院士页面的相对网页地址和院士姓名。</p>",
                "<img src=\"./assets/img/article/spider-tutorial-simple/04.png\" class=\"tutorial-image\">",
                "<img src=\"./assets/img/article/spider-tutorial-simple/05.png\" class=\"tutorial-image\">",
                "<p>3. 编写爬虫代码，先输入目标网站的url，并用requests库获取网页内容，再利用beautifulsoup4库解析网页内容，提取院士姓名和链接地址。</p>",
                "<div class=\"code-block\"><code>import requests<br>from bs4 import BeautifulSoup<br>url = \"https://www.cae.cn/cae/html/main/col48/column_48_1.html\"<br>soup = BeautifulSoup(requests.get(url).content, \"html.parser\")</code></div>",
                "<p>4. 将超链接标签的内容提取出来，并将其链接地址和院士姓名组成元组，存入列表。</p>",
                "<div class=\"code-block\"><code>links = [(i.get_text(strip=True), base_url + i.get(\"href\")) for i in soup.select(\".name_list a\")]</code></div>",
                "<p>5. 输入以下代码，遍历所有院士的姓名和链接地址，并下载其肖像和简介。</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "import os",
                "for name, link in links:",
                "    print(f\"\\n正在读取{name}院士的网页信息：\")",
                "    whoSoup = BeautifulSoup(requests.get(link).content, \"html.parser\")",
                "    img_url = base_url + whoSoup.select_one(\".info_img img\").get(\"src\")",
                "    img_path = f\"{target_dir}\\\\{name}.jpg\"",
                "    with open(img_path, \"wb\") as f:",
                "        f.write(requests.get(img_url).content)",
                "    print(\"肖像已导出\")",
                "    intro_text = \"\\n\".join([i.get_text(strip=True) for i in whoSoup.select(\".intro p\")])",
                "    intro_path = f\"{target_dir}\\\\{name}.txt\"",
                "    with open(intro_path, \"w\", encoding=\"utf-8\") as f:",
                "        f.write(intro_text)",
                "    print(\"简介已导出\")",
                "</pre>",
                "</div>",
                "<p>6. 运行代码，等待下载完成。</p>",
                "<h2>效果展示</h2>",
                "<p>✅ 确保存在python库os、requests、beautifulsoup4</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "import os",
                "import requests",
                "from bs4 import BeautifulSoup",
                "target_dir = \"院士简介\"",
                "if not os.path.exists(target_dir):",
                "    os.makedirs(target_dir)",
                "url = \"https://www.cae.cn/cae/html/main/col48/column_48_1.html\"",
                "base_url = \"https://www.cae.cn\"",
                "soup = BeautifulSoup(requests.get(url).content, \"html.parser\")",
                "links = [(i.get_text(strip=True), base_url + i.get(\"href\")) for i in soup.select(\".name_list a\")]",
                "for name, link in links:",
                "    print(f\"\\n正在读取{name}院士的网页信息：\")",
                "    whoSoup = BeautifulSoup(requests.get(link).content, \"html.parser\")",
                "    img_url = base_url + whoSoup.select_one(\".info_img img\").get(\"src\")",
                "    img_path = f\"{target_dir}\\\\{name}.jpg\"",
                "    with open(img_path, \"wb\") as f:",
                "        f.write(requests.get(img_url).content)",
                "    print(\"肖像已导出\")",
                "    intro_text = \"\\n\".join([i.get_text(strip=True) for i in whoSoup.select(\".intro p\")])",
                "    intro_path = f\"{target_dir}\\\\{name}.txt\"",
                "    with open(intro_path, \"w\", encoding=\"utf-8\") as f:",
                "        f.write(intro_text)",
                "    print(\"简介已导出\")",
                "</pre>",
                "</div>",
                "<img src=\"./assets/img/article/spider-tutorial-simple/01.png\" class=\"tutorial-image\">",
                "<img src=\"./assets/img/article/spider-tutorial-simple/02.png\" class=\"tutorial-image\">",
                "<h2>总结</h2>",
                "<p>爬虫的基本原理是模拟浏览器的行为，通过HTTP请求获取网页内容，并解析网页内容，提取所需信息。本文以爬取院士简介和肖像为例，介绍了爬虫的基本流程和代码实现。爬虫的应用场景有很多，如数据分析、数据挖掘、信息采集、网络监控、网络安全、信息推送等。希望本文能帮助到读者。</p>"
            ]
        },
        {
            "title": "Python PIL库实现图片批量压缩",
            "description": "Python PIL库实现图片批量压缩，并深入分析压缩原理及优化方法",
            "time": "2025-06-06",
            "tags": [
                "Python",
                "PIL",
                "有感记录"
            ],
            "type": "image-compress-tutorial",
            "content": [
                "<h2>背景</h2>",
                "<p>在Web开发、移动应用开发或任何需要处理大量图片的场景中，图片文件大小是一个重要的性能考量因素。过大的图片不仅占用存储空间，还会影响网页加载速度和用户体验。本文将介绍如何使用Python的PIL/Pillow库实现图片的批量压缩，并深入分析压缩原理及优化方法。</p>",
                "<h2>图片压缩的重要性</h2>",
                "<p>图片通常占据了网站或应用的大部分带宽。据统计，图片在网页资源中平均占比超过60%。通过有效的图片压缩，可以显著减少:</p>",
                "<ul>",
                "<li>页面加载时间</li>",
                "<li>带宽使用量</li>",
                "<li>服务器负载</li>",
                "<li>用户数据消耗</li>",
                "</ul>",
                "<h2>Python实现图片批量压缩的代码</h2>",
                "<p>下面是使用Python的PIL库实现图片批量压缩的代码示例:</p>",
                "<div class=\"code-block\">",
                "<pre>",
                "import os\nfrom PIL import Image\nimport threading,time\n\nfor d, _, fl in os.walk(os.getcwd()):\n    for f in fl:\n        path = d + '\\\\' + f\n        if not path.split('.')[-1:][0] in ['png','jpg','jpeg'] or os.path.isdir(path):\n            continue\n        img = Image.open(path)\n        destination = path.split('.')[:-1][0]+'_destination.'+path.split('.')[-1:][0]\n        try:\n            print(path.split('\\\\')[-1:][0],'开始转换图片')\n            img.save(destination, \"JPEG\", quality=80, optimize=True, progressive=True)\n            print(path.split('\\\\')[-1:][0],'转换完毕')\n        except IOError:\n            PIL.ImageFile.MAXBLOCK = img.size[0] * img.size[1]\n            img.save(destination, \"JPEG\", quality=80, optimize=True, progressive=True)\n            print(path.split('\\\\')[-1:][0],'转换完毕')\n        os.remove(path)\n        os.rename(destination,path)\n        print('保存成功')",
                "</pre>",
                "</div>",
                "<h2>代码解析</h2>",
                "<p>这段代码的主要功能包括:</p>",
                "<ol>",
                "<li><strong>遍历文件系统</strong>: 使用os.walk()递归遍历当前目录下的所有文件</li>",
                "<li><strong>筛选图片文件</strong>: 只处理扩展名为png、jpg或jpeg的文件</li>",
                "<li><strong>图片压缩处理</strong>: 使用PIL库打开图片并保存为优化后的JPEG格式</li>",
                "<li><strong>文件替换</strong>: 删除原始文件并将优化后的文件重命名为原文件名</li>",
                "</ol>",
                "<h2>压缩参数详解</h2>",
                "<p>在save()方法中使用的参数对压缩效果有重要影响:</p>",
                "<ul>",
                "<li><code>quality=80</code>: 设置压缩质量，值越高质量越好但文件越大，默认值为75</li>",
                "<li><code>optimize=True</code>: 启用编码器优化，通常可减小文件大小</li>",
                "<li><code>progressive=True</code>: 生成渐进式JPEG，图片在加载时会先显示低质量版本，然后逐渐提高质量</li>",
                "</ul>",
                "<h2>有损压缩与无损压缩</h2>",
                "<p>需要注意的是，上述代码使用的是<strong>有损压缩</strong>方法。有损压缩通过丢弃人眼不太敏感的图像信息来减小文件大小，但会导致图像质量下降。</p>",
                "<p>如果需要无损压缩，可以考虑:</p>",
                "<ul>",
                "<li>使用PNG格式代替JPEG</li>",
                "<li>设置quality=100并禁用子采样</li>",
                "<li>使用专门的无损压缩工具</li>",
                "</ul>",
                "<h2>压缩效果与性能考虑</h2>",
                "<p>通过上述代码，通常可以实现:</p>",
                "<ul>",
                "<li>JPEG文件大小减小30%-70%</li>",
                "<li>PNG文件转换为JPEG后可能减小更多</li>",
                "<li>渐进式JPEG可以提高感知加载速度</li>",
                "</ul>",
                "<p>但需要注意:</p>",
                "<ul>",
                "<li>压缩过程需要消耗CPU资源</li>",
                "<li>每次压缩都是有损的，不建议重复压缩同一图片</li>",
                "<li>对于图标等需要清晰边缘的图像，可能需要使用不同的压缩策略</li>",
                "</ul>",
                "<h2>进一步优化建议</h2>",
                "<p>根据实际需求，可以考虑以下优化:</p>",
                "<ul>",
                "<li>添加多线程支持以加速批量处理</li>",
                "<li>增加图片尺寸调整功能</li>",
                "<li>添加对WebP等现代图片格式的支持</li>",
                "<li>实现图片质量评估，自动选择最佳压缩参数</li>",
                "</ul>",
                "<h2>结论</h2>",
                "<p>Python的PIL/Pillow库提供了强大而灵活的图片处理能力，通过简单的代码就可以实现高效的图片批量压缩。合理使用压缩参数可以在保证视觉质量的同时显著减小文件大小，从而提升应用性能和用户体验。</p>",
                "<p>在实际应用中，建议根据具体场景选择合适的压缩策略和参数，平衡文件大小和图像质量。</p>"
            ]
        },        
        {
            "title": "Arcaea逆向 - 基础篇",
            "description": "讨论左上标题、BYD锁、曲包锁、sc生效、难度上限、二进制修改脚本等基础内容",
            "time": "2025-08-25",
            "tags": [
                "ARM 汇编",
                "逆向工程",
                "Arcaea逆向"
            ],
            "type": "arcaea-reverse-tutorial-basic",
            "content": [
                "<p style=\"color:#ff968d;\">免责声明：自制相关内容涉及 Lowiro 的利益。本文内容仅用于个人逆向技术研究与学习，作者不承担该文所带来的一切附属责任。请勿将此文内容用于商业或者非法用途，继续阅读代表您会为自己的全部行为负责。</p>",
                "## 左上角标题修改",
                "![01](./assets/img/article/arcaea-reverse-tutorial-basic/01.png)",
                "### 方法一、非硬编码修改",
                "- 将*.csb转换成*.csd文件[csb2csd](https://github.com/lyzz0612/csb2csd)",
                "- 下载[Cocos Studio 3.10](https://baoku.360.cn/soft/show/appid/103227726)",
                "- 直接将游戏安装包assets文件夹内的所有文件连同*.csd文件一起导入Cocos Studio即可",
                "这里不做过多展开，此方法还可修改各种UI元素，只需隐藏可见性和交互性，即可自由发挥",
                "### 方法二、硬编码修改",
                "#### 苹果端",
                "- 将Arc-mobile拖入IDA Pro并打开",
                "- Shift + F12 以打开 Strings 窗口",
                "- 直接搜索“Arcaea”既可以定位对应的字符",
                "- 然后View - Open subviews - Hex dump 打开十六进制窗口并找到对应文本",
                "- 左边右键可以直接编辑十六进制，右边编辑可以直接编辑ASCII字符",
                "- 如果需要手改UTF-8字符，可以使用python脚本生成对应的十六进制",
                "```",
                "\"中文字符\".encode('utf-8').hex() => E4 B8 AD E6 96 87 E5 AD 97 E7 AC A6",
                "```",
                "回到IDA View窗口，在左边可以看到偏移地址__text:???，可以使用以下脚本快速替换",
                "```",
                "import os",
                "os.chdir(os.path.dirname(__file__))",
                "def patch_binary_with_offset(file_name, patched_file_name, origin_hex, target_hex, offset):",
                "    try:",
                "        origin = bytes.fromhex(origin_hex)",
                "        target = bytes.fromhex(target_hex)",
                "    except ValueError as e:",
                "        print(f\"十六进制格式错误: {e}\")",
                "        return",
                "    if len(origin) != len(target):",
                "        print(f\"错误: 原始内容长度({len(origin)})与目标内容长度({len(target)})不匹配\")",
                "        return",
                "    if not os.path.exists(file_name):",
                "        print(f\"找不到 {file_name} 文件！\")",
                "        return",
                "    with open(file_name, \"rb\") as f:",
                "        data = bytearray(f.read()) ",
                "    if offset < 0 or offset + len(origin) > len(data):",
                "        print(f\"错误: 偏移地址无效，文件大小为 {len(data)} 字节\")",
                "        return",
                "    if data[offset:offset+len(origin)] != origin:",
                "        actual = data[offset:offset+len(origin)].hex()",
                "        print(f\"错误: 偏移地址 {offset} (0x{offset:x}) 处的内容不匹配\")",
                "        print(f\"预期: {origin_hex}\")",
                "        print(f\"实际: {actual}\")",
                "        return",
                "    data[offset:offset+len(origin)] = target",
                "    with open(patched_file_name, \"wb\") as f:",
                "        f.write(data)",
                "    print(f\"成功在偏移地址 {offset} (0x{offset:x}) 处替换内容\")",
                "    print(f\"修补后的文件已保存为: {patched_file_name}\")",
                "if __name__ == \"__main__\":",
                "    origin_str = input(\"请输入原始的左上角标题(6字符)：\")",
                "    origin_res = origin_str.encode(\"utf-8\").hex()",
                "    target_str = input(\"请输入目标的左上角标题(6字符)：\")",
                "    target_res = target_str.encode(\"utf-8\").hex()",
                "    print(f\"原始的左上角标题: {origin_str} ({origin_res})\")",
                "    print(f\"目标的左上角标题: {target_str} ({target_res})\")",
                "    file_name = \"Arc-mobile\"",
                "    patched_file_name = f\"{file_name}.patched\"",
                "    offset = 0xF92BAF # 偏移地址，每个版本不一样，请根据实际情况修改",
                "    patch_binary_with_offset(",
                "        file_name,",
                "        patched_file_name,",
                "        origin_res,",
                "        target_res,",
                "        offset",
                "    )",
                "    input(\"按任意键退出...\")",
                "```",
                "#### 安卓端",
                "打开Strings窗口搜索“MainMenu.csb”双击第一条按x键以xrefs引用跳转",
                "![02](./assets/img/article/arcaea-reverse-tutorial-basic/02.png)",
                "然后按Tab键进入伪代码，并往下话，找到“Arcaea”字符串，并按Tab回到汇编页面",
                "主要有三行代码构成，分别是：",
                "```",
                "MOV             W9, #0x7241",
                "MOVK            W9, #0x6163,LSL#16",
                "MOV             W10, #0x6165",
                "```",
                "将0x7241、0x6163、0x6165使用python查看对应的字符串bytes.fromhex(\"724161636165\") => rAacae",
                "那么我们就很容易知道它的组成了，分别是rA -> Ar, ac -> ca, ae -> ea",
                "然后直接使用Keypatch插件的Patcher修改汇编中的十六进制值即可",
                "这里有一个简单的替换脚本：",
                "```",
                "import os",
                "from keystone import Ks, KS_ARCH_ARM64, KS_MODE_LITTLE_ENDIAN",
                "os.chdir(os.path.dirname(__file__))",
                "def arm64_to_hex(assembly):",
                "    try:",
                "        ks = Ks(KS_ARCH_ARM64, KS_MODE_LITTLE_ENDIAN)",
                "        encoding = ks.asm(assembly)[0]",
                "        hex_str = ''.join(['%02x' % b for b in encoding])",
                "        return hex_str",
                "    except Exception as e:",
                "        return f\"汇编错误: {str(e)}\"",
                "def get_special_hex_list(origin_str):",
                "    origin_hex = []",
                "    for i in range(0, len(origin_str), 2):",
                "        origin_hex.append(origin_str[i:i+2][::-1])",
                "    for i in range(len(origin_hex)):",
                "        tmp_str = \"\"",
                "        for j in origin_hex[i]:",
                "            tmp_str += hex(ord(j))[2:]",
                "        origin_hex[i] = tmp_str",
                "    return origin_hex",
                "def special_hex_list_convert_hex(origin_hex):",
                "    assembly = f\"\"\"",
                "    mov    w0, #0x{origin_hex[0]}         ",
                "    add    x26, sp, #0xf0      ",
                "    mov    w8, #0xc            ",
                "    movk   w9, #0x{origin_hex[1]}, lsl #16",
                "    mov    w10, #0x{origin_hex[2]}        ",
                "    \"\"\"",
                "    return arm64_to_hex(assembly)",
                "def check_std_input(s):",
                "    if len(s) != 6:",
                "        raise ValueError(\"输入必须是6个字符\")",
                "    return s",
                "if __name__ == \"__main__\":",
                "    origin_str = check_std_input(input(\"请输入原始的左上角标题(6字符)：\"))",
                "    target_str = check_std_input(input(\"请输入目标的左上角标题(6字符)：\"))",
                "    origin_hex = get_special_hex_list(origin_str)",
                "    target_hex = get_special_hex_list(target_str)",
                "    print(\"原始字符串转汇编十六进制：\", origin_hex)",
                "    print(\"目标字符串转汇编十六进制：\", target_hex)",
                "    origin_res = special_hex_list_convert_hex(origin_hex)",
                "    target_res = special_hex_list_convert_hex(target_hex)",
                "    print(f\"原始机器码: {origin_res}\")",
                "    print(f\"目标机器码: {target_res}\")",
                "    fileName = \"libcocos2dcpp.so\"",
                "    patchedFileName = f\"{fileName}.patched\"",
                "    origin = bytes.fromhex(origin_res)",
                "    target = bytes.fromhex(target_res)",
                "    if not os.path.exists(fileName):",
                "        print(f\"找不到 {fileName} 文件！\")",
                "    else:",
                "        with open(fileName, \"rb\") as f:",
                "            data = f.read()",
                "            if data.find(origin) == -1:",
                "                print(f\"{fileName}: 原始地址未找到！\")",
                "            elif data.find(target) != -1:",
                "                print(f\"{fileName}: 目标地址已存在！\")",
                "            else:",
                "                data = data.replace(origin, target)",
                "                with open(patchedFileName, \"wb\") as f:",
                "                    f.write(data)",
                "                print(f\"成功注入 {patchedFileName} 文件！\")",
                "    input(\"按任意键退出...\")",
                "```",
                "## BYD锁破解",
                "该修改思路由[真不知该取什么名呢](https://space.bilibili.com/327513936)提供",
                "- Strings 窗口搜索 dl_ 往下 CMP #3 改为 CMP #47",
                "![03](./assets/img/article/arcaea-reverse-tutorial-basic/03.png)",
                "- Strings 窗口搜索 world_unlock 往下 CMP #3 改为 #47",
                "![04](./assets/img/article/arcaea-reverse-tutorial-basic/04.png)",
                "- Strings 窗口搜索 You no longer 往上 CMP #3 改为 #47",
                "![05](./assets/img/article/arcaea-reverse-tutorial-basic/05.png)",
                "- Strings 窗口搜索 start.png(安卓端) -> download.png(苹果端) 往上 CMP #3 改为 #47",
                "![06](./assets/img/article/arcaea-reverse-tutorial-basic/06.png)",
                "![07](./assets/img/article/arcaea-reverse-tutorial-basic/07.png)",
                "简易的偏移地址映射表修改脚本如下：",
                "```",
                "import os",
                "from keystone import Ks, KS_ARCH_ARM64, KS_MODE_LITTLE_ENDIAN",
                "os.chdir(os.path.dirname(__file__))",
                "def arm64_to_hex(assembly):",
                "    try:",
                "        ks = Ks(KS_ARCH_ARM64, KS_MODE_LITTLE_ENDIAN)",
                "        encoding = ks.asm(assembly)[0]",
                "        hex_str = ''.join(['%02x' % b for b in encoding])",
                "        return hex_str",
                "    except Exception as e:",
                "        return f\"汇编错误: {str(e)}\"",
                "PATCHES = [",
                "    {\"offset\": \"0x711DAC\", \"code\": \"CMP W20, #47\"},",
                "    {\"offset\": \"0x9F9858\", \"code\": \"CMP W8, #47\"},",
                "    {\"offset\": \"0x9B69AC\", \"code\": \"CMP W22, #47\"},",
                "    {\"offset\": \"0x951EF8\", \"code\": \"CMP W8, #47\"}",
                "]",
                "def apply_offset_patches(file_name, patches):",
                "    patched_file_name = f\"{file_name}.patched\"",
                "    if not os.path.exists(file_name):",
                "        print(f\"找不到 {file_name} 文件！\")",
                "        return False",
                "    try:",
                "        with open(file_name, \"rb\") as f:",
                "            data = bytearray(f.read()) ",
                "        for patch in patches:",
                "            offset = int(patch[\"offset\"], 16)",
                "            code = patch[\"code\"]",
                "            hex_code = arm64_to_hex(code)",
                "            if hex_code.startswith(\"汇编错误\"):",
                "                print(f\"补丁 {patch['offset']} 汇编失败: {hex_code}\")",
                "                continue",
                "            try:",
                "                code_bytes = bytes.fromhex(hex_code)",
                "            except ValueError:",
                "                print(f\"补丁 {patch['offset']} 无效的十六进制: {hex_code}\")",
                "                continue",
                "            if offset + len(code_bytes) > len(data):",
                "                print(f\"补丁 {patch['offset']} 超出文件范围，跳过\")",
                "                continue",
                "            data[offset:offset+len(code_bytes)] = code_bytes",
                "            print(f\"成功在偏移 {patch['offset']} 应用补丁: {code}\")",
                "        with open(patched_file_name, \"wb\") as f:",
                "            f.write(data)",
                "        print(f\"已保存偏移地址补丁文件: {patched_file_name}\")",
                "        return True",
                "    except Exception as e:",
                "        print(f\"应用偏移补丁时出错: {str(e)}\")",
                "        return False",
                "if __name__ == \"__main__\":",
                "    try:",
                "        file_name = \"Arc-mobile\"",
                "        print(\"开始应用偏移地址补丁...\")",
                "        apply_offset_patches(file_name, PATCHES)",
                "    except Exception as e:",
                "        print(f\"发生错误: {e}\")",
                "    input(\"按任意键退出...\")",
                "```",
                "## 曲包锁",
                "对于离线壳子，非base包需要修改packlist中的键值对\"is_extend_pack\": true才能游玩！",
                "- Strings 窗口搜索 lock_icon 并 xrefs 进入伪代码",
                "![08](./assets/img/article/arcaea-reverse-tutorial-basic/08.png)",
                "![09](./assets/img/article/arcaea-reverse-tutorial-basic/09.png)",
                "- 跳转到图中的函数并双击打开（苹果端只需xrefs一次就能找到该函数）",
                "- 通过修改汇编把最底下的 return 改为 1 即可",

                "```",
                "MOV W0, #1",
                "RET",
                "```",
                "## scenecontrol生效",
                "也包含绿蛇、红线、透明轨道的破解",
                "该部分由[真不知该取什么名呢](https://space.bilibili.com/327513936)提供",
                "### 安卓端",
                "在IDA view-A界面，点击菜单栏 Search - Lmmediate value",
                "勾选Find all occurrences，分别搜索 0x108、0x110",
                "按 Instruction 排序，Ctrl + F 搜索 LDRB",
                "![10](./assets/img/article/arcaea-reverse-tutorial-basic/10.png)",
                "点开图中最下面的三个 LDRB W8, [X??, #0x108]",
                "（解锁镜头控制 第一步）",
                "把其中的 CBZ NOP 掉",
                "点开 LDRB W9, [X19, #0x110]（启用绿蛇）",
                "![11](./assets/img/article/arcaea-reverse-tutorial-basic/11.png)",
                "把CINC下面的CMP W1, #2 改成 #4",
                "![12](./assets/img/article/arcaea-reverse-tutorial-basic/12.png)",
                "Strings 窗口搜索 gameend，双击 Xerf 跳转",
                "（解锁 Arcahv 红线和透明轨道 第一步）",
                "往上找这个BL sub，双击进去",
                "![13](./assets/img/article/arcaea-reverse-tutorial-basic/13.png)",
                "把LDRB改成MOV W0, #1",
                "![14](./assets/img/article/arcaea-reverse-tutorial-basic/14.png)",
                "String窗口搜索 dropdead，双击Xerf",
                "进入伪代码，往下找到这里，双击该sub",
                "![15](./assets/img/article/arcaea-reverse-tutorial-basic/15.png)",
                "Alt + T 搜索 Scene，往上看到这个 if语句",
                "（解锁镜头控制 第二步）",
                "![16](./assets/img/article/arcaea-reverse-tutorial-basic/16.png)",
                "回到 IDA - View，把 CBZ 改为 CBNZ",
                "![17](./assets/img/article/arcaea-reverse-tutorial-basic/17.png)",
                "再去伪代码，SceneControl往下的这里",
                "（解锁 Arcahv 红线和透明轨道 第二步）",
                "![18](./assets/img/article/arcaea-reverse-tutorial-basic/18.png)",
                "回到 IDA - View，把 CBZ NOP 掉",
                "### 苹果端",
                "在 IDA view 界面，Alt + I，勾选 Find all，搜索 272",
                "按Instruction排序，Ctrl + F 搜索 LDRB",
                "IDA View 窗口看到如下内容的",
                "把 CMP W1, #2 改为 #4、CINC 改为 W1, W1, NE（绿蛇）",
                "![19](./assets/img/article/arcaea-reverse-tutorial-basic/19.png)",
                "String 窗口搜索 gameend，进入该sub",
                "LDRB 改为 MOV W0, #1（红线+透明轨道 第一步）",
                "![20](./assets/img/article/arcaea-reverse-tutorial-basic/20.png)",
                "Alt + T 搜索 LogicSceneControl，点开 `vtable for'LogicSceneControl，进入伪代码",
                "![21](./assets/img/article/arcaea-reverse-tutorial-basic/21.png)",
                "对第一行的sub xerf跳转",
                "![22](./assets/img/article/arcaea-reverse-tutorial-basic/22.png)",
                "往上找到 if (*** == 4)，把该if nop掉（红线+透明轨道 第二步）",
                "![23](./assets/img/article/arcaea-reverse-tutorial-basic/23.png)",
                "Alt + T 搜索 LogicCameraControl，点开 `vtable for'LogicCameraControl，进入伪代码",
                "![24](./assets/img/article/arcaea-reverse-tutorial-basic/24.png)",
                "对第一行的 sub xerf跳转",
                "往上翻，找到该 if，nop掉（镜头控制）",
                "![25](./assets/img/article/arcaea-reverse-tutorial-basic/25.png)",
                "<strong>结尾再次感谢[真不知该取什么名呢](https://space.bilibili.com/327513936)提供的教程</strong>",
                "## 突破曲目难度为12的上限",
                "Strings搜索img/right_arrow_mini.png然后xrefs并进入伪代码",
                "修改如图所示区域的汇编即可",
                "![26](./assets/img/article/arcaea-reverse-tutorial-basic/26.png)",
                "## 长文本的二进制修改脚本",
                "```",
                "import os",
                "os.chdir(os.path.dirname(os.path.abspath(__file__)))",
                "fileName = \"libcocos2dcpp.so\"",
                "patchedFileName = f\"{fileName}.patched\"",
                "hex_origin = \"4772617068696373205175616C69747920686173206265656E2073657420746F204C6F77657220666F7220696D70726F7665640A706572666F726D616E63652E20546869732063616E206265206368616E67656420617420616E792074696D652066726F6D2053657474696E67732E00\"",
                "hex_target = \"417263617365e7a6bbe7babfe5a3b3e5ad90202d205372636173650ae4bb85e4be9be8b0b1e5b888e6b58be8af95e4bdbfe794a8efbc8ce69caae7bb8fe58581e8aeb8e4b88de5be97e5a496e4bca0efbc810a436f70797269676874203230323520c2a920537765656c4c6f6e670000\"",
                "origin = bytes.fromhex(hex_origin)",
                "target = bytes.fromhex(hex_target)",
                "print(f\"Original Unicode string: {origin.decode('utf-8')}\")",
                "print(f\"Target Unicode string: {target.decode('utf-8')}\")",
                "if len(hex_origin) != len(hex_target):",
                "    print(\"The length of the original and target addresses are different.\")",
                "    exit()",
                "if not os.path.exists(fileName):",
                "    print(f\"Could not find {fileName}.\")",
                "    exit()",
                "with open(fileName, \"rb\") as f:",
                "    data = f.read()",
                "    if data.find(origin) == -1:",
                "        print(f\"{fileName}: The original address cannot be found.\")",
                "    elif data.find(target) != -1:",
                "        print(f\"{fileName}: The target address already exists.\")",
                "    else:",
                "        data = data.replace(origin, target)",
                "        with open(patchedFileName, \"wb\") as f:",
                "            f.write(data)",
                "        print(f\"Success! The address patch has been generated for {patchedFileName}.\")",
                "```",
                "怎么获取目标文本的十六进制字符串呢？```\"你好，世界！\".encode('utf-8').hex()```即可得到。"
            ]
        },
        {
            "title": "【已加密】Arcaea逆向 - 壳子篇",
            "description": "围绕壳子制作附加英文语言解锁、主页弹窗、去热更新、修改难度0文本、字体添加",
            "time": "2025-10-02",
            "tags": [
                "🔒",
                "ARM 汇编",
                "逆向工程",
                "Arcaea逆向"
            ],
            "type": "arcaea-reverse-tutorial-modding",
            "content": [],
            "ciphertext": ""
        },
        {
            "title": "【已加密】Arcaea逆向 - 进阶篇",
            "description": "介绍如何突破idx限制、BydEtr共存、AutoPlay、新增PTT框、修改任意难度文本",
            "time": "2025-10-05",
            "tags": [
                "🔒",
                "ARM 汇编",
                "逆向工程",
                "Arcaea逆向"
            ],
            "type": "arcaea-reverse-tutorial-advanced",
            "content": [],
            "ciphertext": ""
        }
    ]
}